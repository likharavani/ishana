<nav class="container-fluid navbar navbar-expand-lg  fixed-top" id="mainNavbar">
  <div class="container py-3">
    <a class="navbar-brand" href="#" id="navbarBrand">
      <%= image_tag 'logo.jpg', style: 'height: 2rem; width: auto; margin-right: 1rem;' %>
      Ishana Interio
    </a>
    
    <button type="button" class="btn btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModal" id="navButton">
      Book an Appointment
    </button>
  </div>
</nav>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
        <div class="p-4 rounded bg-white text-dark shadow" id="contact_modal_form">
          <h3>Let's Connect</h3>
          <p>Tell us some basic information, and our executive will get back to you.</p>
        
          <!-- Name Field -->
          <div class="mb-2">
            <label for="contact_name" class="form-label">Name</label>
            <input type="text" name="name" id="contact_modal_name" class="form-control form-control-sm" placeholder="Enter your name">
          </div>
      
          <!-- Contact Number Field -->
          <div class="my-2 input-group">
            <span class="input-group-text" id="basic-addon1">+91</span>
            <input type="number" name="contact" id="contact_modal_contact" class="form-control form-control-sm" required 
            placeholder="Enter your 10-digit contact number" 
            pattern="^\d{10}$" 
            title="Please enter a valid 10-digit contact number">
          </div>
        
             <!-- State Selection -->
        <div class="input-group mb-2">
          <label for="contact_state" class="input-group-text" style="line-height: 0.5rem;">State</label>
          <select name="state" id="contact_state" class="form-select form-select-sm">
            <option value="Choose...">Choose...</option>
            <% @states.each do |state| %>
              <option value="<%= state %>"><%= state %></option>
            <% end %>
          </select>
        </div>
        
        <!-- City Selection -->
        <div class="input-group mb-2">
          <label for="contact_city" class="input-group-text" style="line-height: 0.5rem;">City</label>
          <select name="city" id="contact_city" class="form-select form-select-sm">
            <option value="Choose...">Choose...</option>
            <% @cities.each do |city| %>
              <option value="<%= city %>"><%= city %></option>
            <% end %>
          </select>
        </div>
      
          <!-- Submit Button -->
          <div class="text-center mt-1 d-grid">
            <button type="button" id="submit_modal_form" class="btn btn-custom">Submit</button>
          </div>
        </div>  
    </div>
  </div>
</div>
<script>
  
    document.addEventListener('DOMContentLoaded', () => {
      const navbar = document.getElementById('mainNavbar');
      const navbarBrand = document.getElementById('navbarBrand');
      const navButton = document.getElementById('navButton');
      const threshold = window.innerHeight * 0.9; // 90vh
      navbar.classList.add('navbar-light'); // Remove light style
      navbar.classList.add('bg-light'); // Remove light style
      navButton.classList.add('btn-custom');

      window.addEventListener('scroll', () => {
        navbar.classList.remove('navbar-light'); // Remove light style
        navbar.classList.remove('bg-light'); // Remove light style
        navButton.classList.remove('btn-custom');

        if (window.scrollY > threshold) {
          navbar.classList.add('navbar-dark-scroll'); // Add dark style
          navbar.classList.remove('navbar-light-scroll'); // Remove light style
          
          navbarBrand.classList.add('text-dark-scroll'); // Add dark button style
          navbarBrand.classList.remove('text-light-scroll'); // Remove light button style
          navButton.classList.add('btn-dark-scroll'); // Add dark button style
          navButton.classList.remove('btn-light-scroll'); // Remove light button style
        } else {
          navbar.classList.add('navbar-light-scroll'); // Add light style
          navbar.classList.remove('navbar-dark-scroll'); // Remove dark style
          navbarBrand.classList.add('text-light-scroll'); // Add dark button style
          navbarBrand.classList.remove('text-dark-scroll'); // Remove light button style
          navButton.classList.add('btn-light-scroll'); // Add light button style
          navButton.classList.remove('btn-dark-scroll'); // Remove dark button style
        }
      });
    });

    // Get the CSRF token from the meta tag in the HTML <head>
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

    console.log('DOM fully loaded');
    const submitModalButton = document.getElementById('submit_modal_form');
    const contact_modal_form = document.getElementById('contact_modal_form');

    
    // Get the CSRF token from the meta tag in the HTML <head>
   
    submitModalButton.addEventListener('click', function(event) {
      event.preventDefault();  // Prevent the default form submission

      // Collect form data
      const formData = new FormData();
      formData.append('email', document.getElementById('contact_modal_email').value);
      formData.append('name', document.getElementById('contact_modal_name').value);
      formData.append('contact', document.getElementById('contact_modal_contact').value);
      formData.append('state', document.getElementById('contact_modal_state').value);
      formData.append('city', document.getElementById('contact_modal_city').value);

      var emailInput = document.getElementById('contact_modal_email');
      var emailValue = emailInput.value;
      var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      
      if (!emailPattern.test(emailValue)) {
          alert("Please enter a valid email address.");
          return;
          event.preventDefault(); // Prevent form submission
      }

       // Contact number validation (only digits and exactly 10 digits)
      var contactInput = document.getElementById('contact_modal_contact');
      var contactValue = contactInput.value;
      var contactPattern = /^\d{10}$/;  // Pattern for exactly 10 digits

      if (!contactPattern.test(contactValue)) {
        // If contact number is invalid, show alert and stop further execution
        alert("Please enter a valid 10-digit contact number.");
        return;
      }
      // Send AJAX request to the controller
      fetch('/contacts/', {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json',  // Expecting JSON response from server
          'X-CSRF-Token': csrfToken,   // Include the CSRF token in the headers
        }
      })
      .then(response => response.json())  // Parse the JSON response
      .then(data => {
        if (data.success) {
          // If success, show SweetAlert
          Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success',
            confirmButtonText: 'OK'
          }).then(() => {
            window.location = '/';  // Redirect to root after success
          });
        } else {
          // If failure, show SweetAlert with error message
          Swal.fire({
            title: 'Error!',
            text: data.message,
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      })
      .catch(error => {
        console.error('Error submitting the form:', error);
        Swal.fire({
          title: 'Error!',
          text: `There was a problem: ${error.message || error.toString()}`,  // Print error message
          icon: 'error',
          confirmButtonText: 'OK'
        });
      });
    });

</script>
